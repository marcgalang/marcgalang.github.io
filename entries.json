{
	"entries":[
		{
		"date":"04/13/2015",
		"title":"Hi, my name is...",
		"text":"&#91disclaimer: I'm not a blogger because I'm not a writer by nature. I need 12 mental edits before I even speak out loud and then I'm STILL not satisfied. Therefore a first draft blog entry is way below what I'm comfortable with sharing, and there just are not enough minutes in a day to do the edits I want to do. That being said, here are my ramblings.&#93<br><br>The day had its share of introductions. Not just of the instructor and my cohorts but introductions to a number of tools such as Notebook++ and Everything (which I'll throw onto my pc as soon as I get home). We each got to boot a machine and play around with these tools. We also set up accounts with various services including but not limited to gmail, google voice, dropbox, stack overflow, Github, and twitter. Much of the morning, while still exploratory, was largely clerical as the accounts were squared away. The fun began when we played with the code for a twitter bot. There were really only a few lines of code, but it was enough to tweet phrases out of a text file. It's one thing to write code that outputs \"Hello, world,\" to a screen but it's more fun to actually work on something that sends out messages to the entire world (of twitter, at least). We then jumped into git, where our code will live. "
		},
		{
		"date":"04/14/2015",
		"title":"D10, I choose you!",
		"text":"&#91disclaimer: I'm not a blogger because I'm not a writer by nature. I need 12 mental edits before I even speak out loud and then I'm STILL not satisfied. Therefore a first draft blog entry is way below what I'm comfortable with sharing, and there just are not enough minutes in a day to do the edits I want to do. That being said, here are my ramblings.&#93<br><br>Although we played with code yesterday, today is the first day we were officially learning what we are doing from the ground up: what is a variable, what is a boolean, etc. We looked at lists and how to manipulate them. There is enough information that may be considered basic to make me feel comfortable but there's still enough that I have to google to find the correct command or the correct syntax. The interesting part of the day is when we played a simple dice game with physical dice, making up and modifying the rules of the game as we went. Based on what we learned the first day (and with the help of prior knowledge, google, and stack overflow) we were to code a version of the game. Even with varying prior coding experience I think that each pair of students is up to the challenge. We're able to help each other as we go, reinforcing things we may have just learned.<br><br>Regular breaks away from the workstations are strongly encouraged, which is difficult with me-- although I appreciate a break when stuck I'd like to keep going when I think I have a flow."
		},
		{
		"date":"04/15/2015",
		"title":"Hump day.",
		"text":"&#91disclaimer: I'm not a blogger because I'm not a writer by nature. I need 12 mental edits before I even speak out loud and then I'm STILL not satisfied. Therefore a first draft blog entry is way below what I'm comfortable with sharing, and there just are not enough minutes in a day to do the edits I want to do. That being said, here are my ramblings.&#93<br><br>Most of us didn't finish the lab from yesterday, so we started the day on that. The lab involved exploring string/list manipulation. I personally spent a lot of time trying to figure out the best way to test if an object exists in two different lists. Logically, it is the intersection of the two sets, but it seems like not only is there not a pre-made function (method? operation?), but according to the internets the best way to do this is with sets, a subject I would be happy to delve into when the need becomes, well, overwhelming... It's not that I don't want to learn something new (that is why I'm here, after all), but I think it best to take in my knowledge in categorized chunks, and something like sets does not fit into any of the chunks I'm currently nibbling on.<br><br>The second half of the day was spent on coding as a group. There were certainly pluses and minuses to this, as I'm sure was part of the point. The exercise gave us the opportunity to work together and share ideas. It allowed people to ask questions and see multiple solutions to a problem. It also showed that multiple solutions can each be valid, but they are not necessarily valid together. But we also got to an end of sorts, which I'd consider a success."
		},
		{
		"date":"04/16/2015",
		"title":"Putting the Fun in Functions (or Life is Like an Infinite Loop So Sometimes You Need a Break)",
		"text":"&#91disclaimer: I'm not a blogger because I'm not a writer by nature. I need 12 mental edits before I even speak out loud and then I'm STILL not satisfied. Therefore a first draft blog entry is way below what I'm comfortable with sharing, and there just are not enough minutes in a day to do the edits I want to do. That being said, here are my ramblings.&#93<br><br>We presented our first code today. It's was nice to see how other teams approached the same problems and sometimes found similar solutions and sometimes did it a different way. It was also nice to see some issues still remained in everyone's code-- nobody is &#91yet&#93 perfect.<br><br>The reason you can read this blog is because today we set it up. We dealt with json files (although we didn't really delve into much detail) and a tiny bit of html.<br><br>Our lecture material was on functions(yay!) and loops(also yay!) but with loops come the need for breaks and trying to figure out why breaks break functions but don't break the way I wanted them to break. However, finally getting it to work was a good win for the day."
		},
		{
		"date":"04/17/2015",
		"title":"Steam Blown",
		"text":"&#91disclaimer: I'm not a blogger because I'm not a writer by nature. I need 12 mental edits before I even speak out loud and then I'm STILL not satisfied. Therefore a first draft blog entry is way below what I'm comfortable with sharing, and there just are not enough minutes in a day to do the edits I want to do. That being said, here are my ramblings.&#93<br><br>New lab today, based on the loops and functions we went over yesterday. Got through quickly, so then I went back to the twit bot and the dice game, concurrently. For the twit bot, I wanted to randomly switch the locations that it was checking for trending topics and from each list I wanted a random topic. This makes things more interesting and dynamic than just choosing the top trending topic in Chicago, which could be the same for hours. It was also breaking when a tweet was over the character limit, so I needed to find how to prevent a long tweet from being sent. For the dice program, much of the code is spent doing something in regards to player 1, then doing the exact same thing for player 2. So I tried to condense the code by adding for-each loops where I could. While this was largely successful, it also brought about a problem with pointers, which is another topic that is beyond my current comfort zone. Or at least it was when I first met them a year and a half ago. So far, today, it's not too bad. The afternoon brought a necessary part of software development: blowing off steam. For us that meant booting up Steam. I haven't played a first person shooter since Quake III. That's older than some of my daughters. So I was little help to my fellow classmates in our attempt to frag our instructors. I also got more done with my dice game and will be polishing it up this weekend. Not because it's required for class. It's just fun.<br><br>"
		},
		{
		"date":"04/20/2015",
		"title":"Blank page on a Monday morning?!?",
		"text":"&#91disclaimer: see above disclaimer&#93<br><br>Where did all my steam go? I think I must have wasted it over the weekend. In whatever time I had to code I was throwing in little bits of text formatting into my dice game, tweaks to my twit bot, or learning about the ComicVine API so in a future little program I was send the cover of a comic book to a notifier app like Boxcar. Today though, I was double stumped. First by the dreaded blank page. Coming up with a worthy project has long been an issue with me. I can more easily meet an objective if I'm given an objective but sometimes I can't get out of the starting gate if the first step is my own idea. And then I spent all morning double guessing and changing that idea. But at least it's moving now. The other half of my stumpedness was getting my head around MongoDB, which looks sooooo much easier than I found it to be. I often look at a few examples of code and see where they overlap as the necessary parts. The 'simple' examples I found were all using different methods so I couldn't see the commonalities, thus my confusion. But again, i have a bit of understanding now. Maybe a good nights sleep will help..."
		},
		{
		"date":"4/21/2015",
		"title":"Hi, Otto!",
		"text":"&#91disclaimer: see above disclaimer&#93<br><br>So I finally settled on a personal project and made decent headway on the interface portion using WConio (after spending an hour with Curses, which is for Unix, not Windows). After being down a bit yesterday I'm okay again. The latest lab assignments presented some interesting challenges. I handled the logic just fine, the commands came to me, and the syntax was eventually fixed, only because things wouldn't run otherwise. I am bit surprised that as I learn more advanced things the simple things can still trip me up. As I switch between more languages in the future, I can see this being an annoying (even if not insurmountable) problem."
		},
		{
		"date":"4/22/2015",
		"title":"I eat deadlines for breakfast.",
		"text":"&#91disclaimer: see above disclaimer&#93<br><br>Further progress made with my personal project. I added functions to print ascii and unicode character numbers as I mapped out my GUI. The next steps of game logic, scoring/status/results appear pretty straight forward now, with time being the most significant limiter. I'm hoping to have the computer play against the user and doing that is the biggest programmatic challenge. And if I finish that I'll add more game elements.<br><br>For the group project I had to decipher how the twitter data was being returned and figure out how to the get to just the pieces I need. Now I just need to take that data and make a list.<br><br>I suspect both deadlines will be met."
		},
		{
		"date":"4/23/2015",
		"title":"p=p%2+1",
		"text":"&#91disclaimer: see above disclaimer&#93<br><br>So how do you use the same mathematical function to turn a 1 into a 2 and a 2 into a 1? I thought there must be a relatively simple way to do it and was thinking about it as I was driving last night. Why was I thinking about such a trivial thing? I'm coming to learn that so much of programming is learning how to do things efficiently. Not only by reducing the number of lines required but also how many characters. At the same time there's a need for readability that can be harder as code becomes more compact. That's the push and pull I'm going through with my 300 odd lines of code in my personal project. Spreading it out makes it a bit easier in some ways(but requires much more scrolling) but when things are more elegant they also impart a decent readability, too. <br><br>Similar to this, Spence, our lead developer on our team project, showed me how using about the same number of characters in about the same number of lines made our program run more than 100 times faster. Genius."
		},
		{
		"date":"4/24/2015",
		"title":"2 down, 10 to go.",
		"text":"&#91disclaimer: see above disclaimer&#93<br><br>I was quite impressed with what each of us has done in the past two weeks. Although some of us come with some coding experience, some of us come with our personal hang-ups and some of us even come with both, we each presented something that was a substantial amount more than where we started. My main take away is that I need to consider using more object oriented programming (OOP?) and setting up my code accordingly. A number of my cohorts took it upon themselves to learn how to do that and I admire them for that. The assignment parameters are not bounds, but benchmarks. That being said, there is something to be said about finding the simplest way to get something done, even if it's not as scalable as another method. Unless scalability is a priority, of course.<br><br>We are supposed to come up with things we want to do to expand or improve our personal projects, but we're not to do it yet. My plan is to add a bunch of features to my game using the methods that I've started with, but I'm doing that this weekend. To fulfil my assignment, I'll rewrite everything with OOP."
		},
		{
		"date":"4/27/2015",
		"title":"The marketing department is behind me on this...",
		"text":"&#91disclaimer: see above disclaimer&#93<br><br>Finished up the personal projects today. I had it basically working on Friday but today I added a random token feature, cleaned up a lot of little things, added an intro screen with animation, made everything a little prettier. Overall I'm happy with it at this point, but still know where improvements can be made (speaking of which, I haven't yet made the code object oriented as was speculated last Friday). We had the opportunity to pitch a feature to be added, as would be the case in the real world. Any such simulations are welcome and we should do something like that on a regular basis. Again, having a class of six makes this very doable.<br><br>We had a coding challenge to write a high-low game as quickly as possible. 20 minutes or so to do 30 dirty lines of code was fun but a reminder that coders like Felicity Smoak only exist in comic books (and tv)."
		},
		{
		"date":"4/28/2015",
		"title":"While python==True",
		"text":"&#91disclaimer: see above disclaimer&#93<br><br>I've realized that I do a lot of pondering before I take action and the bigger the action required the longer the pondering. Today it took a while to decide on a twitter bot worth spending my time on and decided on idea number 3: taking a random twitter user and comparing the friends of all of that user's friends to see who is not yet on a friend of that user, but should be. Then it will tweet that user with the name of the top 5 people they should follow. It should make sense to them because there should be some commonalities to the names on the list. The twist is that the third name on the list is of my choosing.<br><br>I also think I did ok with the mock interview and look forward to the next one.<br><br>On the technical side of things, it still takes a while to parse out what's what in a json, but I found that a little plug-in for my text editor makes it all make a bit more sense."
		},
		{
		"date":"4/29/2015",
		"title":"pre-Java",
		"text":"The morning started with a blog entry to wrap up our section on python, setting up a new wordpress account, and looking for a github repository that we found interesting and possibly to contribute to. The blog entry got lost in the move-- a casualty of the lessons of saving everything but not necessarily on a particular workstation if it is not dedicated to you. Nevertheless, we were given a crash course in html as a precursor to javascript. Although I never really manipulated html before it was mostly straightforward and my ability to form tags, styles, classes and stylesheets is of to a solid start. I've completed 2 of the 3 labs. I discovered the key to lab 2 was that an element can have multiple classes."
		},
		{
		"date":"...sometime in the future?",
		"title":"Dang, that was easy!",
		"text":"&#91disclaimer: see above disclaimer&#93<br><br>Not to brag, but I think I have mastered everything. Not just in code, but in life."
		}
	]
}